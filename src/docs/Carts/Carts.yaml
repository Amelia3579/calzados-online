# ------Lógica para la Documentación de la App------
# /api/carts
paths:
  /api/carts/:
    get:
      summary: Show the created carts
      tags:
        - Carts
      responses:
        "200":
          description: The available carts are
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "The shopping carts was successfully showed."
        "404":
          description: The carts cannot be displayed because they were not found. Please check if the operation you performed is correct.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "The carts cannot be displayed because they were not found. Please check if the operation you performed is correct."
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    post:
      summary: Create a shopping cart
      tags:
        - Carts
      requestBody:
        description: Request body for creating a shopping cart
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/createCart"
      responses:
        "200":
          description: The shopping cart was successfully created
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "The shopping cart was successfully created."
        "400":
          description: The cart could not be created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "The cart could not be created."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
  /api/carts/{cid}:
    get:
      summary: Show cart products based on the specified ID
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart ID to be searched
          schema:
            type: string
      responses:
        "200":
          description: The cart with the specified ID was found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#components/schemas/Cart"
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "The cart with the specified ID was found."
        "404":
          description: The cart with the specified ID cannot be displayed because it was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "The cart with the specified ID cannot be displayed because it was not found."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    put:
      summary: Update cart products based on the specified ID
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart ID to be searched
          schema:
            type: string
      requestBody:
        description: Request body for updating a shopping cart
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateCartProduct"
      responses:
        "200":
          description: The cart was successfully updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "The cart was successfully updated."
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Cart"
        "404":
          description: The cart was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "The cart was not found."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    delete:
      summary: Empty cart
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the cart
      responses:
        "200":
          description: The cart was emptied
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "404":
          description: The cart not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Either the cart or the product was not found."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
  /api/carts/{cid}/product/{pid}:
    post:
      summary: Add product to cart according to the specified ID of both
      tags:
        - Carts
      security:
        - bearerAuth: []
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the cart
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the product
      requestBody:
        description: Request body for adding a product to the cart
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/addProductToCart"
      responses:
        "200":
          description: The product was successfully added to the cart
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "403":
          description: You can't add your products to your cart.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "You can't add your products to your cart."
        "404":
          description: Either the cart or the product was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Either the cart or the product was not found."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    put:
      summary: Update product to cart according to the specified ID of both
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          description: Cart ID to be searched
          schema:
            type: string
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the product
      requestBody:
        description: Request body to update the quantity of the product in the cart
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/updateQuantityProduct"
      responses:
        "200":
          description: The product quantity was updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "The product quantity was updated successfully."
                  products:
                    type: array
                    items:
                      $ref: "#/components/schemas/Cart"
        "404":
          description: The cart was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "The cart was not found."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
    delete:
      summary: Delete product from cart according to the specified IDs of both
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the cart
        - name: pid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the product
      responses:
        "200":
          description: The product was successfully deleted to the cart
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cart"
        "404":
          description: Either the cart or the product was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Either the cart or the product was not found."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
  /api/carts/{cid}/purchase:
    post:
      summary: A ticket is generated after verifying the stock of the products in the cart
      tags:
        - Carts
      parameters:
        - name: cid
          in: path
          required: true
          schema:
            type: string
          description: The ID of the cart
      requestBody:
        description: Request body to add the buyer's email to the ticket after the purchase has been confirmed
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/requestBodies/purchaseCart"
      responses:
        "200":
          description: The purchase and its ticket were made successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "The purchase was successful."
                  cart:
                    $ref: "#/components/schemas/Cart"
                  ticket:
                    type: object
                    properties:
                      code:
                        type: string
                        example: "TICKET12345"
                      purchase_datetime:
                        type: string
                        format: date-time
                      amount:
                        type: number
                        format: float
                      purchaser:
                        type: string
                        example: "buyer@example.com"
        "404":
          description: The cart was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "The cart was not found."
        "500":
          description: Internal server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID autogenerated by MongoDB
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                format: uuid
                description: The ID of the product
              quantity:
                type: integer
                description: The quantity of the product
          required:
            - product
            - quantity
      required:
        - products
      example:
        _id: "6679bed37601cfd961d9c630"
        products:
          - product: "66241f5cf5959a6f14e55c32"
            quantity: 1
          - product: "66241f5cf5959a6f14e55c33"
            quantity: 2
  requestBodies:
    createCart:
      type: object
      properties:
        products:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
                format: uuid
                description: The ID of the product
              quantity:
                type: integer
                description: The quantity of the product
          required:
            - product
            - quantity
      required:
        - products
      example:
        products:
          - product: "66241f5cf5959a6f14e55c32"
            quantity: 1
          - product: "66241f5cf5959a6f14e55c33"
            quantity: 2
    addProductToCart:
      type: object
      properties:
        quantity:
          type: integer
          description: The quantity of the product to add
    updateCartProduct:
      type: object
      properties:
        product:
          type: string
          format: uuid
          description: The ID of the product to update
          required: true
        quantity:
          type: integer
          description: The quantity of the product to update
          required: true
    updateQuantityProduct:
      type: object
      properties:
        quantity:
          type: integer
          description: The quantity of the product to update
          required: true
    purchaseCart:
      type: string
      properties:
        email:
          type: string
          description: Email of the purchaser
      required:
        - email
      example:
        email: "buyer@example.com"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
